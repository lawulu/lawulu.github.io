<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>璐濒殉漂流记</title>
    <link>https://lawulu.github.io/tags/js/feed/index.xml</link>
    <description>Recent content on 璐濒殉漂流记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="https://lawulu.github.io/tags/js/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>AngularJS初窥</title>
      <link>https://lawulu.github.io/post/AngularJS%E5%88%9D%E7%AA%A5/</link>
      <pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://lawulu.github.io/post/AngularJS%E5%88%9D%E7%AA%A5/</guid>
      <description>

&lt;p&gt;无数人吐槽过前端框架的层出不穷,眼看前端开发要脱离浏览器兼容性的苦海,又要落入框架碎片的深坑.从语言本身到编译到打包到开发框架各种框架层出不穷&amp;hellip;是终端用户需求太多还是前端大牛们野心太大? 不管怎样,报G家大腿选择Angular似乎没什么问题,另一个大腿的Reactive本身不是一个完备的框架.&lt;/p&gt;

&lt;h2 id=&#34;angular简介&#34;&gt;Angular简介&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在Web开发中需要JS做什么？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;与服务器交互&lt;/li&gt;
&lt;li&gt;操作DOM&lt;/li&gt;
&lt;li&gt;简单的逻辑控制&lt;/li&gt;
&lt;li&gt;输入验证&lt;/li&gt;
&lt;li&gt;路由&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Angular做了什么改变？&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;引入了指令,ng开头,来扩展HTML&lt;/li&gt;
&lt;li&gt;数据绑定,通过对HTML元素增加指令ng-model&lt;/li&gt;
&lt;li&gt;使用directive来自定义指令&lt;/li&gt;
&lt;li&gt;Scope,提供了HTML视图和JS控制器之间的纽带&lt;/li&gt;
&lt;li&gt;Controller,可以视为一个$Scope的构造函数&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;数据绑定 即将Dom的变化绑定到数据的变化上面去,因为用的1,所以这个绑定是双向的,有时候想只改变页面,会影响到数据&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;使用一周的感受&#34;&gt;使用一周的感受&lt;/h2&gt;

&lt;h3 id=&#34;一些坑&#34;&gt;一些坑:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;架构很恢弘，学习曲线很陡峭&lt;/li&gt;
&lt;li&gt;http是异步,要在.function中处理,为避免因为异步未完成引起的页面问题，课可以统一在配置里面设置&lt;code&gt;async : true&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;怎么Lazy初始化？没有找到办法，可能需要自定义Directive&lt;/li&gt;
&lt;li&gt;一些自定义Directive封装的不彻底，各种问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;controller之间的交互&#34;&gt;Controller之间的交互&lt;/h3&gt;

&lt;p&gt;两种办法&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://stackoverflow.com/questions/29467339/how-to-call-a-function-from-another-controller-in-angularjs&#34;&gt;http://stackoverflow.com/questions/29467339/how-to-call-a-function-from-another-controller-in-angularjs&lt;/a&gt;
本质是绑定到RootScope里面,通过事件来响应&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.csdn.net/findsafety/article/details/50403242&#34;&gt;http://blog.csdn.net/findsafety/article/details/50403242&lt;/a&gt;
原生dom与js的处理办法,可能会版本之间不兼容,本质是通过dom找到Ng-controller的方法.&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;    var appElement = document.querySelector(&#39;[ng-controller=&amp;quot;EndCardEditCtrl as ctrl&amp;quot;]&#39;);
    var editCtrl = angular.element(appElement);
    
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;与jquery-js之间的交互&#34;&gt;与Jquery/JS之间的交互&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;有时候Jquery绑定Function时候,Dom并没有生成,所以需要替换成Angular的&lt;code&gt;ng-click&lt;/code&gt;事件,或者需要绑定到顶级上面,冒泡绑定.&lt;/li&gt;
&lt;li&gt;JS中可以通过元素来找的其绑定的scope
&lt;code&gt;
window.angular.element(&amp;quot;#divId&amp;quot;).scope().doSth()
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;angular的分支循环&#34;&gt;Angular的分支循环&lt;/h3&gt;

&lt;p&gt;Angular提供了Ng-show等逻辑判断,来控制页面的变化.
提供了Switch和For来做分支和循环.
简单来说,基本可以对Html的显示进行编程.&lt;/p&gt;

&lt;h3 id=&#34;scope-apply&#34;&gt;$scope.$apply()&lt;/h3&gt;

&lt;p&gt;点击按钮之后,为什么会绑定成功?奥秘就在于Angular把&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Events =&amp;gt; ng-click
Timeouts =&amp;gt; $timeout
jQuery.ajax() =&amp;gt; $http
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;都Wrapper了,只要这些事件被触发,自动调用&lt;code&gt;$scope.$apply()&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;问题是很多时候(在$scope之外的操作)需要自己手动调用, 但是Angular又保证此方法不能调用两次.
所以官方推荐使用Angular自己那套($Resource,$Route,service之类&amp;hellip;).恩,有种上了贼船的感觉.&lt;/p&gt;

&lt;h3 id=&#34;resource&#34;&gt;$Resource&lt;/h3&gt;

&lt;p&gt;一个对HttpRest的封装,简单的CRUD确实很方便,但是遇到复杂的需求就要抓瞎,很多时候需要调整后端..所以有很多人说,Angular适合做简单的CRUD应用.&lt;/p&gt;

&lt;h3 id=&#34;ng-change&#34;&gt;Ng-change&lt;/h3&gt;

&lt;p&gt;ng-change requires ng-model, without it will not work&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Error: [$compile:ctreq] http://errors.angularjs.org/1.4.5/$compile/ctreq?p0=ngModel&amp;amp;p1=ngChange

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;另外 ng-change对File不生效&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/angular/angular.js/issues/1375&#34;&gt;https://github.com/angular/angular.js/issues/1375&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;单元测试&#34;&gt;单元测试&lt;/h3&gt;

&lt;p&gt;Angular轮了一套Service,Factory之流,自然也少不了单元测试..不知道有多少人会为页面写这玩意.&lt;/p&gt;

&lt;h2 id=&#34;angular自定义directive和ng-repeat的问题&#34;&gt;Angular自定义Directive和Ng-repeat的问题&lt;/h2&gt;

&lt;h3 id=&#34;现象&#34;&gt;现象&lt;/h3&gt;

&lt;p&gt;同事自定义了一个&lt;code&gt;directive&lt;/code&gt;，模仿&lt;a href=&#34;http://www.cnblogs.com/e50000/p/5663806.html&#34;&gt;这里&lt;/a&gt;做的一个日期控件。这个&lt;code&gt;directive&lt;/code&gt;需要input域里面含有一个id。另外一个同事想在 &lt;code&gt;np-repeat&lt;/code&gt;里面使用这个控件，为了保证id唯一性，写成了这样，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; &amp;lt;input type=&amp;quot;text&amp;quot; ng-model=&amp;quot;statDatas[$index].endDate&amp;quot; class=&amp;quot;overviews_date&amp;quot; placeholder=&amp;quot;结束时间&amp;quot; &amp;quot;id=&amp;quot;{{&#39;startDateInput&#39;+$index}}&amp;quot;  ng-change=&amp;quot;statDateChanged($index)&amp;quot; readonly  def-laydate&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果一直报错&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;TypeError: Cannot read property &#39;tagName&#39; of undefined
    at Object.Dates.run (http://localhost:8081/resources/js/laydate.js:171:42)
    at win.laydate (http://localhost:8081/resources/js/laydate.js:34:11)
    at link (http://localhost:8081/resources/platformJs/ad_angular.js:592:20)
    at http://localhost:8081/resources/angular/angular.min.js:72:493
    at $ (http://localhost:8081/resources/angular/angular.min.js:73:46)
    at L (http://localhost:8081/resources/angular/angular.min.js:61:495)
    at g (http://localhost:8081/resources/angular/angular.min.js:54:326)
    at g (http://localhost:8081/resources/angular/angular.min.js:54:349)
    at g (http://localhost:8081/resources/angular/angular.min.js:54:349)
    at g (http://localhost:8081/resources/angular/angular.min.js:54:349) &amp;lt;input type=&amp;quot;text&amp;quot; ng-model=&amp;quot;statDatas[$index].startDate&amp;quot; class=&amp;quot;overviews_date ng-pristine ng-untouched ng-valid ng-isolate-scope&amp;quot; placeholder=&amp;quot;开始时间&amp;quot; id=&amp;quot;{{&#39;startDateInput&#39;+$index}}&amp;quot; ng-change=&amp;quot;statDateChanged($index,ad.id)&amp;quot; readonly=&amp;quot;&amp;quot; def-laydate=&amp;quot;&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;分析&#34;&gt;分析&lt;/h3&gt;

&lt;p&gt;一开始就怀疑，是因为执行这个&lt;code&gt;directive&lt;/code&gt;时候&lt;code&gt;np-repeat&lt;/code&gt;还没有执行完，即这个dom还没有渲染完毕。那怎么解决呢？
1. 监听&lt;code&gt;np-repeat&lt;/code&gt;,等结束之后，再去动态的执行自定义&lt;code&gt;directive&lt;/code&gt;。例如这篇文章里面：&lt;a href=&#34;http://www.tuicool.com/articles/Fb2um2e&#34;&gt;利用angular指令监听ng-repeat渲染完成后执行脚本&lt;/a&gt;
2. 貌似有个Priority的属性，然而，搜了一下&lt;code&gt;np-repeat&lt;/code&gt;的Priority非常大，为1000，而自定义的priority为0.
3. 仔细看报错日志，感觉像是laydate里面拿到的document是angular渲染之前的，所以找不到对应的Input域。这时候搜索已经没有意义了，应该仔细弄清楚&lt;code&gt;directive&lt;/code&gt;各行代码的意义。
4. scope的问题？&lt;/p&gt;

&lt;h3 id=&#34;解决办法&#34;&gt;解决办法&lt;/h3&gt;

&lt;p&gt;用原始的值传递和&lt;code&gt;$scope.$apply&lt;/code&gt;来交互数据，弃掉自定义控件&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一次Ajax上传文件的调试过程</title>
      <link>https://lawulu.github.io/post/%E4%B8%80%E6%AC%A1Ajax%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E7%9A%84%E8%B0%83%E8%AF%95%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sat, 19 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://lawulu.github.io/post/%E4%B8%80%E6%AC%A1Ajax%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E7%9A%84%E8%B0%83%E8%AF%95%E8%BF%87%E7%A8%8B/</guid>
      <description>

&lt;p&gt;很久不做Web了,帮一同事解决的一个问题.发现新人解决问题都是在Search and Try,据他说无脑搜了很久,但是不会利用Chrome,也不会分析问题.&lt;/p&gt;

&lt;h2 id=&#34;现象和代码&#34;&gt;现象和代码&lt;/h2&gt;

&lt;h3 id=&#34;js端&#34;&gt;Js端&lt;/h3&gt;

&lt;p&gt;使用的FormData&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var formData = new FormData();
    var actionUrl = &amp;quot;/report/agentUpload&amp;quot;;
    var form = new FormData();
    form.append(&amp;quot;file&amp;quot;, $(&amp;quot;#reportFile&amp;quot; )[0]);

    var xhr = new XMLHttpRequest();
    xhr.open(&amp;quot;post&amp;quot;, actionUrl, true);
    xhr.onload = function () {
         alert(&amp;quot;上传完成!&amp;quot;);
    };

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;server端&#34;&gt;Server端&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;public String upload(HttpServletRequest request, @RequestParam(value=&amp;quot;file&amp;quot;,required = true) MultipartFile file, ModelMap model)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是就是取不到,报错：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Required MultipartFile parameter &#39;file&#39; is not present
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;server端的问题&#34;&gt;Server端的问题？&lt;/h2&gt;

&lt;p&gt;是否发到了Server？&lt;/p&gt;

&lt;p&gt;看Chrome Network面板里面这次请求的Request：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;------WebKitFormBoundaryNLPhxKE21THaBaN1
Content-Disposition: form-data; name=&amp;quot;file&amp;quot;

[object HTMLInputElement]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;貌似是正确的,在Server端确认一下,将参数加上required=false
查看request:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;multipartParameters = {HashMap@8882}  size = 1
multipartParameterContentTypes = {HashMap@8883}  size = 1
multipartFiles = {LinkedMultiValueMap@8884}  size = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Request里面有东西,但是multipartFiles没有东西……&lt;/p&gt;

&lt;p&gt;&lt;em&gt;其实这时候应该已经看出问题了,因为那个值是一个String,但是没注意,自己盲目以为只要带multipartParameters就是文件&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;debug到CommonsMultipartResolver的resolveMultipart方法,里面有这段判断&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;protected MultipartParsingResult parseFileItems(List&amp;lt;FileItem&amp;gt; fileItems, String encoding) {
		MultiValueMap&amp;lt;String, MultipartFile&amp;gt; multipartFiles = new LinkedMultiValueMap&amp;lt;String, MultipartFile&amp;gt;();
		Map&amp;lt;String, String[]&amp;gt; multipartParameters = new HashMap&amp;lt;String, String[]&amp;gt;();
		Map&amp;lt;String, String&amp;gt; multipartParameterContentTypes = new HashMap&amp;lt;String, String&amp;gt;();

		// Extract multipart files and multipart parameters.
		for (FileItem fileItem : fileItems) {
			if (fileItem.isFormField()) {
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果是false…就往MultipartFile里面填值.
难道是Content-type的问题？&lt;/p&gt;

&lt;h3 id=&#34;去js端&#34;&gt;去Js端&lt;/h3&gt;

&lt;p&gt;先找到如何打印Formdata的：
&lt;a href=&#34;http://stackoverflow.com/questions/17066875/how-to-inspect-formdata&#34;&gt;http://stackoverflow.com/questions/17066875/how-to-inspect-formdata&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for (var pair of formData.entries()) {
    console.log(pair[0]+ &#39;, &#39; + pair[1]); 
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;打印的东西是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;file, [object HTMLInputElement]

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;决定采用原始的document.getElementById(&amp;ldquo;reportFile&amp;rdquo;).files[]&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lastModifiedDate: Tue Dec 20 2015 10:39:39 GMT+0800 (CST)name: &amp;quot;工作簿1.xlsx&amp;quot;size: 23168type: &amp;quot;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&amp;quot;webkitRelativePath: &amp;quot;&amp;quot;__proto__: File

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最终发现问题：
应该用&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; $(&amp;quot;#reportFile&amp;quot; )[0].files[0]

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;结论&#34;&gt;结论&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;盲目的去搜索其实非常浪费时间&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;要善用Chrome Console&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;chrome的一些调试技巧&#34;&gt;Chrome的一些调试技巧&lt;/h2&gt;

&lt;h3 id=&#34;如何找到对应的元素触发的function&#34;&gt;如何找到对应的元素触发的function？&lt;/h3&gt;

&lt;p&gt;可以在EventListerner里面把Click当做断点，也可以点击某个元素，找到对应监听的EventListener,或者对某一个片dom点击&lt;code&gt;Break on subtree modification&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;缓存相关&#34;&gt;缓存相关&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;强制刷新 cmd+shift+r&lt;/li&gt;

&lt;li&gt;&lt;p&gt;可以在设置中禁止缓存&lt;/p&gt;

&lt;h3 id=&#34;console&#34;&gt;console&lt;/h3&gt;

&lt;p&gt;在某个页面，可以在console页面随时调试,甚至可以执行函数：&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;$(&#39;.choose_endcard&#39;).click()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But,为什么Xpath选择的不能调用Click…&lt;/p&gt;

&lt;h3 id=&#34;setting里面可以对console-log加上timestamp&#34;&gt;Setting里面可以对console.log加上Timestamp&lt;/h3&gt;
</description>
    </item>
    
    <item>
      <title>Freemarker下为静态资源增加Version</title>
      <link>https://lawulu.github.io/post/Freemarker%E4%B8%8B%E4%B8%BA%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%A2%9E%E5%8A%A0Version/</link>
      <pubDate>Wed, 04 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://lawulu.github.io/post/Freemarker%E4%B8%8B%E4%B8%BA%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E5%A2%9E%E5%8A%A0Version/</guid>
      <description>

&lt;h2 id=&#34;源起&#34;&gt;源起&lt;/h2&gt;

&lt;p&gt;因为客户端浏览器缓存问题，每次发布时候之后，经常遇到新修改的JS/CSS不生效，需要手动清理老版本的缓存。其实业界已经有成熟的解决方案，无非加上Version或者禁止客户端缓存，未免遗忘，在这里记录一下。&lt;/p&gt;

&lt;h2 id=&#34;具体方案&#34;&gt;具体方案&lt;/h2&gt;

&lt;h3 id=&#34;自定义一个freemarkervariables&#34;&gt;自定义一个FreemarkerVariables&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;public class FreemarkerVariables extends HashMap{
    public FreemarkerVariables(){
        super();
        this.put(&amp;quot;resourceVersion&amp;quot;,&amp;quot;&amp;quot;+System.currentTimeMillis());
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;freemarker配置&#34;&gt;Freemarker配置&lt;/h3&gt;

&lt;p&gt;使用了FreemarkerVariables&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;bean id=&amp;quot;freemarkerVariables&amp;quot; class=&amp;quot;xxx.FreemarkerVariables&amp;quot;/&amp;gt;
	&amp;lt;bean id=&amp;quot;freemarkerConfig&amp;quot; class=&amp;quot;org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer&amp;quot;&amp;gt;
		&amp;lt;property name=&amp;quot;templateLoaderPath&amp;quot; value=&amp;quot;/WEB-INF/views/&amp;quot;/&amp;gt;
		&amp;lt;property name=&amp;quot;freemarkerSettings&amp;quot;&amp;gt;
			&amp;lt;props&amp;gt;
				&amp;lt;prop key=&amp;quot;defaultEncoding&amp;quot;&amp;gt;UTF-8&amp;lt;/prop&amp;gt;
			&amp;lt;/props&amp;gt;
		&amp;lt;/property&amp;gt;
		&amp;lt;property name=&amp;quot;freemarkerVariables&amp;quot; ref=&amp;quot;freemarkerVariables&amp;quot;/&amp;gt;
	&amp;lt;/bean&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;批量替换&#34;&gt;批量替换&lt;/h3&gt;

&lt;p&gt;做之前搜索了下，N多人都是写一个小工具。感谢现代IDE，直接替换就可以了。把所有的 &lt;code&gt;js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt; 替换成&lt;code&gt;js?v=${resourceVersion}&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/code&gt;即可，注意不要使用正则。&lt;/p&gt;

&lt;h2 id=&#34;验证&#34;&gt;验证&lt;/h2&gt;

&lt;p&gt;开发者的Chrome一般都是&lt;code&gt;Disable Cache&lt;/code&gt;的，这时候Header里面会有&lt;code&gt;no-cache&lt;/code&gt;，否则，应该可以看到&lt;code&gt;Status Code:304 Not Modified (from memory cache)&lt;/code&gt;之类的东西。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>