<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>璐濒殉漂流记</title>
    <link>https://lawulu.github.io/tags/wherehows/feed/index.xml</link>
    <description>Recent content on 璐濒殉漂流记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="https://lawulu.github.io/tags/wherehows/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>元数据管理</title>
      <link>https://lawulu.github.io/post/%E5%85%83%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://lawulu.github.io/post/%E5%85%83%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86/</guid>
      <description>

&lt;h2 id=&#34;引子&#34;&gt;引子&lt;/h2&gt;

&lt;h3 id=&#34;业务元数据&#34;&gt;业务元数据&lt;/h3&gt;

&lt;p&gt;最近公司新来一个气场强大的产品，发现有些内部（研发和商务之间经过多次讨论之后形成的）常用的一些话术，他已经在改变对应的说法了。例如广告，因为数据库叫Campaign，所以技术这边都叫Campaign，商务本来已经要从Ad改成了Campaign了，现在有多了个说法叫offer；追踪链接的叫法本来要按照商务的来了，现在愈发混乱了。同一个含义对应的不同的表达，在需求到研发落地和数据流转时候，很容易出问题。&lt;/p&gt;

&lt;p&gt;项目刚起时候，制定一个词典/元数据非常重要，并且要随着业务的发展及时更新。业务元数据可以极大的减少沟通成本。&lt;/p&gt;

&lt;h3 id=&#34;一个悲剧&#34;&gt;一个悲剧&lt;/h3&gt;

&lt;p&gt;IMEI在电信手机上，取到的是一个字符串而不是一个数字。Server发现这个问题之后，没有及时的同步到数据，结果被这个问题又坑了一次。&lt;/p&gt;

&lt;h2 id=&#34;元数据是什么&#34;&gt;元数据是什么&lt;/h2&gt;

&lt;p&gt;瓦利哥（神策数据的创始人）在知乎有一个非常好的专栏（&lt;a href=&#34;https://zhuanlan.zhihu.com/sangwf/20622902&#34;&gt;https://zhuanlan.zhihu.com/sangwf/20622902&lt;/a&gt;
）。有一章专门讲百度的元数据服务的演进。
所谓的元数据服务：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Schema：表字段的定义&lt;/li&gt;
&lt;li&gt;数据就绪状态&lt;/li&gt;
&lt;li&gt;对外服务的API&lt;/li&gt;
&lt;li&gt;数据审计/变更&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;瓦利哥推荐了HCatalog，有空打算尝试一下，大概看了一下，是强制要求遵循某种规范。&lt;/p&gt;

&lt;h2 id=&#34;业界解决方案&#34;&gt;业界解决方案&lt;/h2&gt;

&lt;h3 id=&#34;wherehows&#34;&gt;Wherehows&lt;/h3&gt;

&lt;p&gt;LinkedIn开源了一个数据发现和血缘管理工具，叫做Wherehows，开发团队全华人。解决的是类似的问题，不过并不是强制要求开发团队生产数据时候主动和metadata绑定，而是通过分析Scheduler log和Repo(如Azkaban和Hadoop job)，爬取其他数据（如关系数据库和HDFS)来建立元数据，并分析彼此的血缘关系。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://engineering.linkedin.com/blog/2016/03/open-sourcing-wherehows--a-data-discovery-and-lineage-portal&#34;&gt;https://engineering.linkedin.com/blog/2016/03/open-sourcing-wherehows--a-data-discovery-and-lineage-portal&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;google-goods&#34;&gt;Google Goods&lt;/h3&gt;

&lt;p&gt;Google最近写了一篇相关论文，《Goods: Organizing Google’s Datasets》。论文中的Overview图和wherehows特别相似。看来big campany的big data都有相似的需求。Google公开的（可以被公司所有工程师查看的）datasets有26B，20多种格式，每天有很多数据在被删除..总之很有挑战性，但是依然只是一个论文。
Goods支持用户对数据的标注。&lt;/p&gt;

&lt;h2 id=&#34;实践&#34;&gt;实践&lt;/h2&gt;

&lt;p&gt;上面两个对我们现在的公司太重了。现在公司所有的元数据都是通过Excel和Jira来管理，主要还是口头沟通。两个努力的方向：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;考虑想一个jar的方式把日志metadata（字段含义和顺序）给确定下来，日志的输出、收集和处理都依赖于这个jar，以版本号管理。甚至，Hive表结构变更也要依赖于metadata。嗯，首先要把日志统一由CIF(Api Gateway)来输出。&lt;/li&gt;
&lt;li&gt;对于容易出错的东西，一定要拿出来公开讨论，例如公司SDK上报的Platform字段，IPad和Iphone不一样。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>