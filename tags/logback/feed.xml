<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>璐濒殉漂流记</title>
    <link>https://lawulu.github.io/tags/logback/feed/index.xml</link>
    <description>Recent content on 璐濒殉漂流记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="https://lawulu.github.io/tags/logback/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Logback的一些奇技淫巧</title>
      <link>https://lawulu.github.io/post/Logback%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</link>
      <pubDate>Fri, 11 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://lawulu.github.io/post/Logback%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/</guid>
      <description>

&lt;p&gt;Logback是一款非常优秀的日志框架。但是每个开发面对的需求也是多种多样的。
如果你有下面的需求，那你看了这篇文章就可以了：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;每次调用链都生成一个唯一的traceId&lt;/li&gt;
&lt;li&gt;修改配置文件即时生效，例如，为了定位一个问题，临时将log级别修改为debug&lt;/li&gt;
&lt;li&gt;不同环境使用不同的配置&lt;/li&gt;
&lt;li&gt;Logback的默认Rolling策略是：有新的Log产生，如果需要rolling，则rename原来的文件。这样会存在的一个问题就是，如果没有新的log产生，就不会重命名原来的文件。如果遇上需要同步日志（例如Rsync），就会出现问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;日志的traceid&#34;&gt;日志的TraceId&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;在Filter里面增加一个，ThreadLocal based 变量：&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;
public class CustomFilter extends OncePerRequestFilter {
	
	private static final Random random = new Random(System.currentTimeMillis()); //TODO

	@Override
	protected void doFilterInternal(HttpServletRequest request,
			HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {
		
	
		request.setAttribute(ApiConstants.RQID, rnd);
		
		response.setHeader(ApiConstants.HEADER_RQID, rnd);
		MDC.put(ApiConstants.RQID, rnd);
		try{
			filterChain.doFilter(request, response);
		}finally{
			MDC.remove(ApiConstants.RQID);
		}

	}

}
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;配置文件&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt; &amp;lt;encoder&amp;gt;
	        &amp;lt;pattern&amp;gt;%d{yyyy-MM-dd HH:mm:ss} %-4relative [%thread] %-5level %logger{35} [%X{x-jjk-rqid:-notFound}]- %msg%n&amp;lt;/pattern&amp;gt;
	    &amp;lt;/encoder&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;自动更新配置&#34;&gt;自动更新配置&lt;/h3&gt;

&lt;p&gt;显然会影响效率&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;configuration debug=&amp;quot;true&amp;quot; scan=&amp;quot;true&amp;quot; scanPeriod=&amp;quot;1 minutes&amp;quot;&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;各个环境引入不同的profile&#34;&gt;各个环境引入不同的Profile&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;	&amp;lt;property resource=&amp;quot;config/config-${envTarget}.properties&amp;quot;/&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;基于条件写不同的文件-siftingappender&#34;&gt;基于条件写不同的文件：SiftingAppender&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt; &amp;lt;appender name=&amp;quot;stats&amp;quot; class=&amp;quot;ch.qos.logback.classic.sift.SiftingAppender&amp;quot;&amp;gt;
        &amp;lt;!-- in the absence of the class attribute, it is assumed that the
             desired discriminator type is
             ch.qos.logback.classic.sift.MDCBasedDiscriminator --&amp;gt;
        &amp;lt;discriminator&amp;gt;
            &amp;lt;key&amp;gt;date&amp;lt;/key&amp;gt;
            &amp;lt;defaultValue&amp;gt;unknown&amp;lt;/defaultValue&amp;gt;
        &amp;lt;/discriminator&amp;gt;
        &amp;lt;sift&amp;gt;
            &amp;lt;appender name=&amp;quot;FILE-${date}&amp;quot; class=&amp;quot;ch.qos.logback.core.FileAppender&amp;quot;&amp;gt;
                &amp;lt;file&amp;gt;/mnt/media-${date}.log&amp;lt;/file&amp;gt;
                &amp;lt;!--&amp;lt;append&amp;gt;false&amp;lt;/append&amp;gt;--&amp;gt;
                &amp;lt;encoder&amp;gt;
                    &amp;lt;pattern&amp;gt;%msg%n&amp;lt;/pattern&amp;gt;
                    &amp;lt;charset&amp;gt;UTF-8&amp;lt;/charset&amp;gt;
                &amp;lt;/encoder&amp;gt;
            &amp;lt;/appender&amp;gt;
        &amp;lt;/sift&amp;gt;
    &amp;lt;/appender&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;代码中需要写MDC变量：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        MDC.put(&amp;quot;date&amp;quot;, dateString);

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>