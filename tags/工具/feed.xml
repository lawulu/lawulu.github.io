<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>璐濒殉漂流记</title>
    <link>https://lawulu.github.io/tags/%E5%B7%A5%E5%85%B7/feed/index.xml</link>
    <description>Recent content on 璐濒殉漂流记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="https://lawulu.github.io/tags/%E5%B7%A5%E5%85%B7/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>程序员必备七种武器</title>
      <link>https://lawulu.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E5%A4%87%E4%B8%83%E7%A7%8D%E6%AD%A6%E5%99%A8/</link>
      <pubDate>Fri, 10 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://lawulu.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98%E5%BF%85%E5%A4%87%E4%B8%83%E7%A7%8D%E6%AD%A6%E5%99%A8/</guid>
      <description>

&lt;p&gt;&lt;em&gt;本篇为公众号&lt;code&gt;码农翻身&lt;/code&gt;的约稿&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;科学上网&#34;&gt;科学上网&lt;/h2&gt;

&lt;p&gt;从服务器芯片到底层协议，从W3C技术标准到github各种开源项目，IT技术绝大部分都起源于墙外，而Google是检索这些第一手技术的最好的手段，没有之一。所以对码农来说，可以自由的浏览是非常有必要的。&lt;/p&gt;

&lt;p&gt;有很多种科学上网方式，笔者推荐自己买海外主机搭建,可以和亲近朋友一起使用一台。除了常用的SS之外，SSH的socks转发是最简单的方式了。&lt;/p&gt;

&lt;p&gt;例如笔者常用的一个shell：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh
nohup ssh  -ND 3128 user@jumpserver &amp;amp;
/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome  Chrome --proxy-server=&amp;quot;socks5://localhost:3128&amp;quot; --host-resolver-rules=&amp;quot;MAP * 0.0.0.0 , EXCLUDE localhost&amp;quot; --user-data-dir=/tmp/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这个shell在Mac下启动一个Chrome进程，该进程完全以jumpserver的网络去访问互联网，这样在这个Chrome内访问公司云主机内网的各种服务非常方便。&lt;/p&gt;

&lt;h2 id=&#34;剪贴板&#34;&gt;剪贴板&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://blog.todamax.net/wp-content/uploads/2016/03/copy-paste-from-stack-overflow.jpeg&#34;&gt;http://blog.todamax.net/wp-content/uploads/2016/03/copy-paste-from-stack-overflow.jpeg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;相信大家最常用的快捷键就是复制和粘贴了。
假如你刚刚从Wiki的设计文档把一个API的URL复制下来准备写代码；发现经常聊天的一个技术群弹出一个消息，有个妹子问一个技术问题，凭借自己对技术的感觉很快在Stackoverflow搜到了答案，
赶紧把答案复制过去；突然又收到产品群发的一个邮件需要你去撕逼，写了几句之后，觉得某个措辞应该放到后面，刚剪切了第一句；经理在IM上让你把某个需求的Jira链接发给他..你如果经常遇到这种情况，首先考虑的应该是把所有的打扰都屏蔽掉，如果做不到，那就安装一个剪贴板工具吧。&lt;/p&gt;

&lt;p&gt;Windows下推荐ditto，Mac下推荐Alfred自带的。顺便提一下，类似Mac下的Alfred这种工具（Windows下的有TotalCommander），如果能研究透彻，会极大的提高工作效率。&lt;/p&gt;

&lt;h2 id=&#34;抓包&#34;&gt;抓包&lt;/h2&gt;

&lt;p&gt;现在很多产品和需求都需要通过网络与用户或其他服务打交道。抓包工具可以把自己交付物当做一个黑盒，去发现和定位问题。Windows下的Fiddler，Mac下推荐Charles都非常强大。这两者通过安装证书，甚至可以直接抓取Https的网络。&lt;/p&gt;

&lt;p&gt;基于Web的应用，也可以直接考虑浏览器的开发者工具。例如，Chrome的开发者工具就非常强大：可以直接找到元素的XPath，在Console运行JS代码，通过修改元素的文本来P图。&lt;/p&gt;

&lt;p&gt;如果想做更深层次的抓包，可以研究下Wireshark。&lt;/p&gt;

&lt;h2 id=&#34;文本编辑器&#34;&gt;文本编辑器&lt;/h2&gt;

&lt;p&gt;程序员经常要跟各种日志和数据打交道，一个熟悉的文本编辑器可以事半功倍。&lt;/p&gt;

&lt;p&gt;笔者比较常用的功能有列模式，例如把一些数据直接编辑成SQL；正则替换，例如从不太标准的日志中提取自己所需的内容。&lt;/p&gt;

&lt;p&gt;文本编辑器免费的有Sublime Text/Atom,商业软件有UltraEdit等。另外还有一种基于终端的文本编辑器，例如Nano/Vim/Emacs。如果从事Server开发，掌握这些编辑器的查找、修改、行号等功能是非常有必要的。&lt;/p&gt;

&lt;h2 id=&#34;笔记&#34;&gt;笔记&lt;/h2&gt;

&lt;p&gt;在这个信息爆炸的时代，搜索引擎有时候也捉襟见肘。子曰：&amp;rdquo;吾日三省吾身&amp;rdquo;，做笔记是一个非常好的反省自己的手段，对每天的收获进行记录和整理，也方便后续快速解决类似问题。市面上的笔记产品大同小异，笔者一直使用有道云笔记：支持MarkDown语法，免费，跨平台。
另外，思维导图也是一个非常好的整理自己知识的工具。&lt;/p&gt;

&lt;h2 id=&#34;脚本语言&#34;&gt;脚本语言&lt;/h2&gt;

&lt;p&gt;假如突然接到一个这样的临时需求：需要给客户端提供一个模拟服务器，根据请求内容的不同，返回相应的Json。这个需求用Python SimpleHTTPServer十几行代码就能实现。很多类似的临时需求，还有需要快速验证的想法，以及粘合多个系统，脚本语言是最合适的。在自己的主力开发语言之外熟悉一门脚本语言做很多事都可以事半功倍，也可以体验到另一种编程文化。&lt;/p&gt;

&lt;p&gt;有很多脚本语言（shell,Ruby,Perl等等）可以选择，笔者推荐Python。Python这些年在很多领域都重新受到追捧。Python有2和3两种，推荐直接上手3，虽然很多老版本服务器系统自带的还是2，但是现在基本上所有的主流库都已经支持Python3了。&lt;/p&gt;

&lt;p&gt;如果单纯的当做一个脚本语言，只需要了解如何处理字符串，常用数据结构，如何处理文件和网络IO,基本就满足日常需求了。&lt;/p&gt;

&lt;p&gt;另外推荐一下Jupyter Notebook，这是一个web版的Python编辑、运行和演示环境(也支持R等其他语言)，可以和shell等环境变量交互。很多人在服务器上直接运行notebook,然后在本地web端调试python程序。&lt;/p&gt;

&lt;h2 id=&#34;自己的codebase&#34;&gt;自己的CodeBase&lt;/h2&gt;

&lt;p&gt;将自己Coding经验提炼为一个CodeBase。经常需要的用模块，如Web框架、模板引擎、Http请求、单元测试以及Mock、Cache、调度、Metric、时间处理、安全、日志、XML/Excel解析等等，每一个模块都有三四种可以选择的技术，选择一个自己熟悉的，构建自己的软件开发栈，这样遇到各种需求都能快速基于自己的CodeBase的实现。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>