<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>璐濒殉漂流记</title>
    <link>https://lawulu.github.io/tags/arch/feed/index.xml</link>
    <description>Recent content on 璐濒殉漂流记</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <atom:link href="https://lawulu.github.io/tags/arch/feed/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>公司整体架构上的一些思考</title>
      <link>https://lawulu.github.io/post/%E5%85%AC%E5%8F%B8%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E4%B8%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://lawulu.github.io/post/%E5%85%AC%E5%8F%B8%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E4%B8%8A%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</guid>
      <description>

&lt;h2 id=&#34;server&#34;&gt;Server&lt;/h2&gt;

&lt;h3 id=&#34;性能&#34;&gt;性能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;流量高峰时候遇到过响应时间过大

&lt;ul&gt;
&lt;li&gt;充分利用WEB服务器性能(例如OpenResty或者Nginx+NgixScirpt），将简单通用的业务逻辑（如签名校验和去重逻辑）前置，降低后端容器的负荷，提高并发和响应&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;客户端重试导致的服务器雪崩

&lt;ul&gt;
&lt;li&gt;部分接口静态化（例如config接口），服务降级，例如直接返回null
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;redis依赖&#34;&gt;Redis依赖&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;太过于依赖Redis

&lt;ul&gt;
&lt;li&gt;引入二级缓存，降低和隔离对Redis的依赖&lt;/li&gt;
&lt;li&gt;Redis数据分只读和读写两种，可以放到两个集群里面&lt;/li&gt;
&lt;li&gt;上Redis集群？&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;阿里云Redis

&lt;ul&gt;
&lt;li&gt;考虑在某些场景用阿里云Redis
&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;监控和日志&#34;&gt;监控和日志&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;现在已经有了基于Zabbix的机器性能的监控，需要业务层次的分布式监控系统（例如Cat），方便快速洞察和响应线上问题&lt;/li&gt;
&lt;li&gt;日志统一格式到Json&lt;/li&gt;
&lt;li&gt;ELK需要提到日程了&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;数据&#34;&gt;数据&lt;/h2&gt;

&lt;h3 id=&#34;数据质量&#34;&gt;数据质量&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;使用python grep按小时检查原始日志，来和Hive对比保证数据完整和正确性
&lt;code&gt;
p = subprocess.Popen(&amp;quot;&amp;quot;&amp;quot; cat &amp;quot;&amp;quot;&amp;quot; + file + &amp;quot;&amp;quot;&amp;quot;| grep -avF &#39;[2.3.0]&#39; | grep -aF &#39;[04]&#39;  |  wc -l &amp;quot;&amp;quot;&amp;quot;, shell=True, stdout=subprocess.PIPE );
&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;对某些阈值进行报警，例如Preload，没有转化，点击率过低等情况。帮助运营及早洞察线上问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;任务调度&#34;&gt;任务调度&lt;/h3&gt;

&lt;p&gt;现在基于Crontab，缺点：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;没有任务依赖关系，通过较长的时间间隔来保证任务的先后顺序。&lt;/li&gt;
&lt;li&gt;重跑起来比较麻烦。&lt;/li&gt;
&lt;li&gt;报警实现起来有点难&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;解决方案：&lt;/p&gt;

&lt;p&gt;根据开源实现，将现有的任务（任务类型主要：shell,hive,sqoop）整合到任务调度系统中。
例如：&lt;a href=&#34;http://azkaban.github.io/azkaban/docs/latest/#new-hive-type&#34;&gt;http://azkaban.github.io/azkaban/docs/latest/#new-hive-type&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;查询引擎&#34;&gt;查询引擎&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;因为某些维度太细（手机型号，城市）报表查询慢

&lt;ul&gt;
&lt;li&gt;为报表预生成数据&lt;/li&gt;
&lt;li&gt;更换查询引擎，如Druid，Kylin？&lt;/li&gt;
&lt;li&gt;Ali RDS是否有优化Mysql（例如引擎）的可能&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;其他&#34;&gt;其他&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;对Serving的支持：数据和Server的界限问题。例如ImprNum per Campaign per app的计数，这个应该放到data还是server？&lt;/li&gt;
&lt;li&gt;分层过多，如何快速响应业务变化？&lt;/li&gt;
&lt;li&gt;如何能快速定位问题？如为什么填充下降了？不填充的原因要列出来。如为什么有些erpm低的拿到的量大？(4G网络下面包体大于100M的不下发， 前面高erpm的经过两轮（第一轮是否在线，第二轮数据网络条件下面包体大小过滤）过滤掉， 正好轮到了1789下发)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>